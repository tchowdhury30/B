// Tasnim Chowdhury
// APCS pd8
// L06: Read/Review/Expand
// 2022-02-11
// time spent: 1.5 hr

Activity 1
1.
  a. sentimentVal( word )
  b. Parameter- string
  c. returns double
2.
  System.out.println(sentimentVal("analytical")); is 0.09
  System.out.println(sentimentVal("attack")); is -1.44
  System.out.println(sentimentVal("bearded")); is 0.47
3.
  a. compiles b/c input is String
  a. does not compiles b/c input is not String
  a. does not compiles b/c input has 2 strings, not 1

Activity 2
1. Implemented totalSentiment(fileName)
2. System.out.println(totalSentiment("SimpleReview.txt")); is -3.58
3. Implemented starRating(fileName)
4. totalSentiment first converts the entire review file into string review without punctuation.
  Then, it iterates through each character in review, checking if there is a space, which
  would mean there is a completed word, and sentimentVal() would be called on this word,
  and this value would be added to the final return value. If there is no space,
  that means the current character the loop is at is part of a word, and this character
  would be added to String word.
5.
  a. The ratings makes sense because the higher the amount of positive adjectives
  are in the review, the higher the rating.
  b. totalSentiment could look for phrases with 2+ words, and it could also look for
  punctuation, like explanation points.
6.
  a. The logical error is that the student checked if the totalSentiment is less than
  the threshold for the higher star rating, not if its greater, which makes more sense
  (eg. if (totalSentiment < 15), if (totalSentiment < 10)).
  b. The student can fix this by changing all instances of < to >.

Activity 3
3. indexOf finds the position of the first occurrence of given character(s) in a string
  by iterating through each character in the string and checking if the input is equal to
  the value at the current index. substring returns part of a string including the value
  at the starting index and excluding the value at the last index. Its important to add
  1 to the position of the space because the length of the string is equal to the index of
  the last character in a string + 1.
5. Static methods can be called outside of the instance of the class the method is written in
  whereas non static methods can only be called in an instance of the class.
6. Fake review can be modified by adding a database for autogenerated review key words and
  adding them to a review with its adjectives changed by fakeReview.

Activity 4
1. Intentionally make a business fail by bringing negative attention to it.
2. Intentionally make a business look better to consumers by bringing positive attention to it.
3. The method needs to first check the  totalSentiment value of the review to check if it is more
  negative or positive using a conditional. Then depending on if its more positive, then the method will iteriate through
  every word and change all the neutral (sentimentVal = 0) and negative (sentimentVal < 0) ones and
  change them to a value from negAdjectives. If the review is more negative then it will do the same
  except only replace the negative and neutral words with a value from posAdjectives.
4. Updated fakeReview.
5. The result is changing a local string variable called oneWord into part of the string of oneWord
  starting at index 1, so the oneWord variable would become a the same string as the original except with
  the first letter cut off.
6. It is necessary so an accurate comparison can be made between the words in the cleanSentiment.csv file
  and the words in the review. There are no words with the asterisk in the csv file so the sentiment value
  would be 0 if the asterisk was not removed.
7. The method would need to replace all negative and neutral adjectives in the review with positive
  adjectives. It can do this using the randomPositiveAdj() method in its algorithmn instead of
  using randomAdjective().

Activity 5
1.
2.
3.
4.
5.
6.
